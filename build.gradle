buildscript {

	dependencies { classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.5'

	}
}

plugins {

	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'

}


group = 'com.peper'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
apply plugin: 'com.github.jacobono.jaxb'

repositories {
	mavenCentral()
}

bootJar {
	baseName = 'gs-consuming-web-service'
	version =  '0.0.1'
}
dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.0'
	implementation 'mysql:mysql-connector-java:8.0.22'
	compile("wsdl4j:wsdl4j:1.6.3")
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	compileOnly 'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'

	testCompileOnly 'org.projectlombok:lombok:1.18.16'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'


	jaxb 'javax.activation:activation:1.1.1'
	jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
	jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
	jaxb 'javax.xml.bind:jaxb-api:2.2.7'
	jaxb "org.jvnet.jaxb2_commons:jaxb2-basics-ant:0.6.5"
	jaxb "org.jvnet.jaxb2_commons:jaxb2-basics:0.6.4"
	jaxb "org.jvnet.jaxb2_commons:jaxb2-basics-annotate:0.6.4"
	jaxb "org.jvnet.jaxb2_commons:jaxb2-value-constructor:3.0"
}
jaxb {

	System.setProperty('javax.xml.accessExternalSchema', 'all') //To solve external schema dependencies
	xsdDir = "src/main/resources/schema/" //xsd directory
	xjc {
		taskClassname = "org.jvnet.jaxb2_commons.xjc.XJC2Task" // This is for setter plugin
		args = ["-Xsetters","-Xsetters-mode=direct"]
	}
}

test {
	useJUnitPlatform()
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'build/generated-sources/jaxb'
		}
	}
}

task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.schema = "src/main/resources/countries.xsd"

	outputs.dir sourcesDir

	doLast() {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
					classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)

			xjc(destdir: sourcesDir, schema: schema) {
				arg(value: "-wsdl")
				produces(dir: sourcesDir, includes: "**/*.java")
			}
		}
	}
}